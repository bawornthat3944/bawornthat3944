function doGet(e) {
  return HtmlService.createTemplateFromFile("index").evaluate() ## ‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÑ‡∏ü‡∏•‡πå ‡∏£‡∏´‡∏±‡∏™ ‡∏Å‡∏±‡∏ö index ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô
}

function userClick(data) {
  let ss = SpreadsheetApp.openById('1st9MUmaGhU8mNnfU5OPRkmClBRNfUWOqQ9cAGxhjCTs'); # ‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏ô‡∏≥‡∏•‡∏¥‡πâ‡∏á‡∏Ñ‡πå‡∏Ç‡∏≠‡∏á Google Sheet ‡∏°‡∏≤‡πÉ‡∏™‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ô‡∏Å‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏´‡∏ï‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô Google Sheet
  let sheet = ss.getSheets()[0];
  let response = Maps.newGeocoder().reverseGeocode(data.lat, data.lon);
  let geoAddress = response.results[0].formatted_address;
  sheet.appendRow([data.username,Utilities.formatDate(new Date(), "GMT+7", "MM/dd/yyyy HH:mm:ss"), `${data.lat},${data.lon}`, geoAddress,data.types,data.phonenumber, data.details])

  var strYear543 = parseInt(Utilities.formatDate(new Date(), "Asia/Bangkok", "yyyy")) + 543;  
  var strhour=Utilities.formatDate(new Date(), "Asia/Bangkok", "HH");
  var strMinute=Utilities.formatDate(new Date(), "Asia/Bangkok", "mm");
  var strMonth1 = Utilities.formatDate(new Date(), "Asia/Bangkok", "M");
  var strMonthCut1 = ["", "‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°", "‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå", "‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°", "‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô", "‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°", "‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô", "‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°", "‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°", "‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô", "‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°", "‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô", "‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°"]  
  var strMonthThai = strMonthCut1[strMonth1];
  var strDay = Utilities.formatDate(new Date(), "Asia/Bangkok", "d"); // d ‡πÑ‡∏°‡πà‡∏°‡∏µ 0 ‡∏ô‡∏≥ dd ‡∏°‡∏µ 0 ‡∏ô‡∏≥
  var daytime=strDay+' '+strMonthThai+' '+strYear543+ ' ‡πÄ‡∏ß‡∏•‡∏≤ '+strhour+':'+strMinute+' ‡∏ô.';
  
  var text_data1 = '‚ùó‚ùó‚ùó‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‚ùó‚ùó‚ùó\n';
  text_data1 +='\üì£‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏áüì£\n'+data.types+'\nüì£‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏áüì£\n'+data.details+'\n‚è∞‡∏ß‡∏±‡∏ô-‡πÄ‡∏ß‡∏•‡∏≤‚è∞\n'+daytime+'\nüë®‚Äçüíº‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•üë©‚Äçüíº\n'+data.username+'\nüìû‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£üìû\n'+data.phonenumber+'\nüìå‡∏û‡∏¥‡∏Å‡∏±‡∏î\n'+data.lat+","+data.lon + '\nüè°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà\n'+geoAddress
      
var latitude = data.lat
var longitude = data.lon
var map = Maps.newStaticMap()
.setSize(800,800)  //(Max:1300 X 1300)
.setLanguage('TH')
.setMobile(true)
.setMapType(Maps.StaticMap.Type.HYBRID)

map.addMarker(latitude, longitude)
var mapBlob = map.getBlob()
var mapUrl = map.getMapUrl()
sendHttpPostImage(text_data1,mapBlob)
}

## ‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô Token ‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÑ‡∏•‡∏ô‡πå ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ô‡∏≥‡∏°‡∏≤‡∏à‡∏≤‡∏Å Line Notify ‡πÑ‡∏î‡πâ
function sendHttpPostImage(mapUrl, mapBlob){
var token = ("kLdqLmCUdZvhcQhkptPAKccsqD7ABpc0M3W8aEMXKaA")
var formData = {
'message' : '\n'+mapUrl,
'imageFile': mapBlob

}
var options =
{
"method"  : "post",
"payload" : formData,  
"headers" : {"Authorization" : "Bearer "+ token}
};

UrlFetchApp.fetch("https://notify-api.line.me/api/notify",options);
}
